{"version":3,"sources":["assets sync /^/.*/.jpg$","assets/02n.jpg","assets/03n.jpg","assets/04n.jpg","assets/09d.jpg","assets/09n.jpg","assets/10d.jpg","assets/10n.jpg","assets/11d.jpg","assets/11n.jpg","assets/13d.jpg","assets/13n.jpg","assets/50d.jpg","assets/50n.jpg","assets/dust_bg.jpg","Map.js","api.js","Weather.js","fbase.js","Create.js","Report.js","Content.js","assets/mockup.png","Modal.js","UseModal.js","Board.js","assets/meoib_logo.png","Basictool.js","App.js","index.js","assets/01d.jpg","assets/01n.jpg","assets/02d.jpg","assets/03d.jpg","assets/04d.jpg"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","kakao","window","geocoder","maps","services","Geocoder","MapCom","coords","region","getContainer","a","document","getElementById","container","createMap","lat","lon","searchAddrFromCoords","callback","options","center","LatLng","level","setTimeout","Map","getDistance","polyline","Polyline","path","console","log","getLength","result","status","Status","OK","i","length","region_type","address_name","coord2RegionCode","useEffect","className","type","name","style","width","height","display","api","axios","create","baseURL","Weather","bgName","useState","getApi","weatherObj","setWeatherObj","getWeather","get","data","regieon","temp","main","feels_like","weather","icon","src","alt","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","dbService","auth","firestore","Create","user","onCreate","content","setContent","onSubmit","event","preventDefault","d","Date","day","getDay","hours","getHours","minutes","getMinutes","ampm","contentObj","position","timestamp","now","time","randomId","Math","floor","random","dayKor","reportNum","Number","uid","collection","add","then","docRef","onChange","value","target","Paper","elevation","faTimes","onClick","TextField","placeholder","required","autoFocus","Button","variant","endIcon","Icon","Report","onReport","contentArr","onThreeReport","onClickReport","alert","doc","update","Content","isOwner","editting","setEditting","newContent","setNewContent","report","setReport","visible","setVisible","distance","toggleEdit","prev","DeleteContent","confirm","delete","Modal","isShowing","hide","onAuth","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","signInAnonymously","catch","error","errorMessage","message","body","useModal","setIsShowing","toggle","Board","creating","setCreating","setAuth","setAuthInfo","setUser","signOut","setSignOut","signBtnText","setSignBtnText","latlon","onAuthStateChanged","onSnapshot","snapshot","docs","updateDistance","Boolean","backgroundImage","phoneImg","sytle","marginTop","cursor","Basictool","href","logoImg","App","setCoords","init","setInit","setBgName","bgUrl","setBgUrl","setRegion","bgAddr","require","default","navigator","geolocation","getCurrentPosition","latitude","longitude","url","render","StrictMode"],"mappings":"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","file":"static/js/main.74339aec.chunk.js","sourcesContent":["var map = {\n\t\"./01d.jpg\": 57,\n\t\"./01n.jpg\": 58,\n\t\"./02d.jpg\": 59,\n\t\"./02n.jpg\": 105,\n\t\"./03d.jpg\": 60,\n\t\"./03n.jpg\": 106,\n\t\"./04d.jpg\": 61,\n\t\"./04n.jpg\": 107,\n\t\"./09d.jpg\": 108,\n\t\"./09n.jpg\": 109,\n\t\"./10d.jpg\": 110,\n\t\"./10n.jpg\": 111,\n\t\"./11d.jpg\": 112,\n\t\"./11n.jpg\": 113,\n\t\"./13d.jpg\": 114,\n\t\"./13n.jpg\": 115,\n\t\"./50d.jpg\": 116,\n\t\"./50n.jpg\": 117,\n\t\"./dust_bg.jpg\": 118\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 104;","export default __webpack_public_path__ + \"static/media/02n.d1aa477f.jpg\";","export default __webpack_public_path__ + \"static/media/03n.fcf5552c.jpg\";","export default __webpack_public_path__ + \"static/media/04n.14ab8299.jpg\";","export default __webpack_public_path__ + \"static/media/09d.c09369d0.jpg\";","export default __webpack_public_path__ + \"static/media/09n.fa383ca5.jpg\";","export default __webpack_public_path__ + \"static/media/10d.994bd009.jpg\";","export default __webpack_public_path__ + \"static/media/10n.4872cb7a.jpg\";","export default __webpack_public_path__ + \"static/media/11d.581637df.jpg\";","export default __webpack_public_path__ + \"static/media/11n.d431c7cd.jpg\";","export default __webpack_public_path__ + \"static/media/13d.40e6db1d.jpg\";","export default __webpack_public_path__ + \"static/media/13n.00d26e89.jpg\";","export default __webpack_public_path__ + \"static/media/50d.f6af9b8e.jpg\";","export default __webpack_public_path__ + \"static/media/50n.9be5783c.jpg\";","export default __webpack_public_path__ + \"static/media/dust_bg.cbbcb2e5.jpg\";","import React, {useEffect} from \"react\";\r\nconst {kakao} = window;\r\nconst geocoder = new kakao.maps.services.Geocoder();\r\n\r\nconst MapCom = ({coords, region}) => {\r\n    const getContainer = async () => {\r\n        const container = await document.getElementById(\"map\");\r\n        createMap(coords.lat, coords.lon, container);\r\n        searchAddrFromCoords(coords.lon, coords.lat, callback);\r\n    };\r\n\r\n    const createMap = (lat, lon, container) => {\r\n        const options = { //지도를 생성할 때 필요한 기본 옵션\r\n            center: new kakao.maps.LatLng(lat, lon), //지도의 중심좌표.\r\n            level: 4 //지도의 레벨(확대, 축소 정도)\r\n        };\r\n        const map = setTimeout(() => { //지도 생성 및 객체 리턴\r\n            new kakao.maps.Map(container, options);\r\n        }, 1000);\r\n        getDistance(lat, lon);\r\n    };\r\n    \r\n    const getDistance = (lat, lon) => {\r\n        var polyline = new kakao.maps.Polyline({\r\n            path : [\r\n                new kakao.maps.LatLng(lat, lon),\r\n                new kakao.maps.LatLng(36.365243, 127.436007)\r\n            ]\r\n        });\r\n        console.log('polyline.getLength():', polyline.getLength());\r\n        return polyline.getLength();\r\n        // 내 위치에서 1km 반경에 있는 사람들의 글만 보이게\r\n    }\r\n    \r\n    const callback = (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n            //var infoDiv = document.getElementById('centerAddr');\r\n            \r\n            for(var i = 0; i < result.length; i++) {\r\n                // 행정동의 region_type 값은 'H' 이므로\r\n                if (result[i].region_type === 'H') {\r\n                    // infoDiv.innerHTML = result[i].address_name;\r\n                    console.log('result : ',result[i].address_name);\r\n                    break;\r\n                }\r\n                region(result[1]);\r\n            }\r\n        }   \r\n    }\r\n    const searchAddrFromCoords = (lat, lon, callback) => {\r\n        // 좌표로 행정동 주소 정보를 요청합니다\r\n        const result = geocoder.coord2RegionCode(lat, lon, callback);\r\n    };\r\n    // // 지도에 표시할 원을 생성합니다\r\n    // const circle = new kakao.maps.Circle({\r\n    //     center : new kakao.maps.LatLng(33.450701, 126.570667),  // 원의 중심좌표 입니다 \r\n    //     radius: 2000, // 미터 단위의 원의 반지름입니다 \r\n    //     // strokeWeight: 5, // 선의 두께입니다 \r\n    //     // strokeColor: '#75B8FA', // 선의 색깔입니다\r\n    //     // strokeOpacity: 1, // 선의 불투명도 입니다 1에서 0 사이의 값이며 0에 가까울수록 투명합니다\r\n    //     // strokeStyle: 'dashed', // 선의 스타일 입니다\r\n    //     // fillColor: '#CFE7FF', // 채우기 색깔입니다\r\n    //     // fillOpacity: 0.7  // 채우기 불투명도 입니다   \r\n    // }); \r\n\r\n    // // 지도에 원을 표시합니다 \r\n    // circle.setMap(map); \r\n\r\n    useEffect(() => {\r\n        getContainer();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"popup\">\r\n            <input type=\"hidden\" name=\"otherLat\" id=\"otherLat\" />\r\n            <input type=\"hidden\" name=\"otherLon\" id=\"otherLon\" />\r\n            <div id=\"map\" style={{width:400, height:400, display:\"none\"}} />\r\n        </div>\r\n    )\r\n};\r\nexport default MapCom;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL : \"https://api.openweathermap.org/data/2.5\",\r\n});\r\n\r\nexport const weatherApi = (lat, lon) => api.get(`weather?lat=${lat}&lon=${lon}&appid=77371d8edaa624e1334298cf740c7bce&units=metric`);\r\n// export const userIpApi = () => `https://api.ipdata.co/?api-key=1ab80a79ea5f35a9d21e9b64415a3e1a08f30b0118f7f44223247e24`;\r\nexport const userIpApi = () => `https://api.ip.pe.kr/`;","import React, {useEffect, useState} from \"react\";\r\nimport {weatherApi} from \"./api\";\r\n\r\nconst Weather = ({coords, bgName, region}) => {\r\n    // 위도 경도 apiKey 보내기\r\n    const [api, getApi] = useState(false);\r\n    const [weatherObj, setWeatherObj] = useState(null);\r\n    const getWeather = async () => {\r\n        const {data} = await weatherApi(coords.lat, coords.lon);\r\n        setWeatherObj({\r\n            regieon : data.name,\r\n            temp : data.main.temp,\r\n            feels_like : data.main.feels_like,\r\n            weather : data.weather[0].main,\r\n            icon : data.weather[0].icon\r\n        });\r\n        // bgName(`img${data.weather[0].icon}`);\r\n        bgName(data.weather[0].icon);\r\n        getApi(true);\r\n    }\r\n    useEffect(() => {\r\n        getWeather();\r\n    }, []);\r\n    return (\r\n        <>\r\n        {api ? \r\n            (\r\n                <>\r\n                    <div className=\"weather_box\">\r\n                        <div className=\"weather_icon_box\">\r\n                            <img className=\"weather_icon\" src={`http://openweathermap.org/img/w/${weatherObj.icon}.png`} alt=\"날씨 아이콘\" />\r\n                        </div>\r\n                        <p className=\"weatherText\">현재 위치 {region.address_name}</p>\r\n                        <p className=\"weatherText\">기온 {weatherObj.temp}˚C</p>\r\n                        <p className=\"weatherText\">체감 {weatherObj.feels_like}˚C</p>\r\n                        {/* <p>날씨-{weatherObj.weather}</p> */}\r\n                    </div>\r\n                </>\r\n            ) \r\n            : \r\n            \"Can't get the weather\"\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBC42chVkeAv0OZaaosfJSxw6cSECqHerU\",\r\n    authDomain: \"mies-9b170.firebaseapp.com\",\r\n    projectId: \"mies-9b170\",\r\n    storageBucket: \"mies-9b170.appspot.com\",\r\n    messagingSenderId: \"539673967625\",\r\n    appId: \"1:539673967625:web:8ff5ca38849c7fab108cd8\",\r\n    measurementId: \"G-T25N9822NR\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();","import { dbService } from \"./fbase\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Ip from \"./Ip\";\r\nimport {userIpApi} from \"./api\";\r\nimport { Paper } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Create = ({coords, user, onCreate}) => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    <Ip />\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let d = new Date();\r\n        let day = d.getDay(); // 시\r\n        let hours = d.getHours(); // 시\r\n        let minutes = d.getMinutes();  // 분\r\n        let ampm = \"\";\r\n        if(hours < 13) {\r\n            ampm = \"오전\"\r\n        } else {\r\n            ampm = \"오후\";\r\n            hours -= 12;\r\n        }   \r\n        const contentObj = {\r\n            content : content,\r\n            position : coords,\r\n            // town : \"\", 지도api로 동네를 알아낼 수 있나..? => 네이버 api는 가넝\r\n            timestamp : Date.now(),\r\n            time : ampm+\" \" + hours+\"시 \"+minutes+\"분\",\r\n            randomId : Math.floor(Math.random() * 101),\r\n            day : day,\r\n            dayKor : \"오늘\",\r\n            reportNum : Number(\"0\"),\r\n            uid : user.uid\r\n        }\r\n        console.log('contentObj:', contentObj);\r\n\r\n        await dbService.collection(\"ㅁㅇㅇㅇ\").add(contentObj).then((docRef) => {console.log('docRef id:', docRef.id)});\r\n        setContent(\"\");\r\n\r\n        onCreate();\r\n    }\r\n    const onChange = async (event) => {\r\n        const {target:{value}} = event;\r\n        setContent(value);\r\n    }\r\n    return (\r\n        <div className=\"bgCover\">\r\n            <Paper elevation={3} className=\"boardBox\">\r\n                <form className=\"board\" onSubmit={onSubmit}>\r\n                    <FontAwesomeIcon className=\"boardCloseIcon\" icon={faTimes} onClick={e => onCreate()} />\r\n                    <h3 className=\"boardTitle\">난 오늘 이렇게 입었어!</h3>\r\n                    {/* <input className=\"boardInput\" type=\"text\" placeholder=\"오늘 날씨에 맞는 옷차림을 알려주세요!\" value={content} required autoFocus onChange={onChange} /> */}\r\n                    <TextField className=\"boardInput\" placeholder=\"오늘 날씨에 맞는 옷차림을 알려주세요!\" value={content} required autoFocus onChange={onChange}></TextField>\r\n                    <Button type=\"submit\" variant=\"contained\" className=\"btnCreate\" endIcon={<Icon>send</Icon>}>알려주기</Button>\r\n                </form>\r\n            </Paper>\r\n                {/* <button onClick={toggleEditing} className=\"formBtn cancelBtn\">취소</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;\r\n","import React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"./fbase\";\r\n\r\nconst Report = ({onReport, contentArr, onThreeReport}) => {\r\n    let [reportNum, setReportNum] = useState(contentArr.reportNum + 1);\r\n    const onClickReport = async () => {\r\n        alert(\"신고하시겠습니까? 동일 게시물에 3회 이상 신고가 되면 숨김 처리 됩니다.\");\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            reportNum : reportNum\r\n        });\r\n        onReport(); // report 박스 안보이게 설정\r\n        if(reportNum >= 3) {onThreeReport();}\r\n    }\r\n    return (\r\n        <div className=\"reportBox\">\r\n            <h4>신 고</h4>\r\n            <FontAwesomeIcon className=\"reportCloseIcon\" icon={faTimes} onClick={e => onReport()} />\r\n            <ul>\r\n                <li value=\"01\" onClick={onClickReport}>1. 불쾌함, 욕설, 비하</li>\r\n                <li value=\"02\" onClick={onClickReport}>2. 광고</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report;","import React, {useEffect, useState} from \"react\";\r\nimport { dbService } from \"./fbase\";\r\nimport Report from \"./Report\";\r\n\r\nconst Content = ({contentArr, isOwner}) => {\r\n    const [editting, setEditting] = useState(false);\r\n    const [newContent, setNewContent] = useState(contentArr.content);\r\n    const [report, setReport] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    let d = new Date();\r\n    let day = d.getDay();\r\n    let dayKor = \"\";\r\n    if (contentArr.day !== day) {\r\n        dayKor = \"어제 \"\r\n    } else {\r\n        dayKor = \"오늘 \"\r\n    }\r\n    let distance = contentArr.distance;\r\n\r\n    useEffect(() => {\r\n        if(contentArr.reportNum >= 3) {setVisible(true);}\r\n        else {}\r\n    }, []); \r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {target:{value}} = event;\r\n        setNewContent(value);\r\n    }\r\n    const toggleEdit = () => setEditting((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            content : newContent\r\n        });\r\n        setEditting(false);\r\n    }\r\n    const DeleteContent = async () => {\r\n        const confirm = window.confirm(\"정말 이 글을 삭제하시겠어요?\");\r\n        if(confirm) {\r\n            await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).delete()\r\n        }\r\n    }\r\n    console.log('content distance second : ', distance);\r\n    return (<>\r\n        {distance ? (\r\n        <>\r\n            {editting ? (\r\n                    <>\r\n                    <form className=\"contentBox\" onSubmit={onSubmit}>\r\n                        <input className=\"\" value={newContent} onChange={onChange} name=\"newContent\" placeholder=\"내용을 수정해주세요\"></input>\r\n                        <input type=\"submit\" value=\"수정완료\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEdit}>수정취소</button>\r\n                    </>\r\n                )\r\n            :\r\n                // visible이 false이면 보여주고 true이면 숨기기\r\n                (!visible ? <div className=\"contentBox\"> \r\n                    <p className=\"content__owner\">랜선친구 {contentArr.randomId}</p>\r\n                    <div className=\"formBtnBox\">\r\n                        {isOwner ? \r\n                        <>\r\n                            <button onClick={toggleEdit} className=\"formBtn\">수정</button>\r\n                            <button onClick={DeleteContent} className=\"formBtn\">삭제</button>\r\n                        </> \r\n                        : \r\n                            <button onClick={()=>setReport(true)} className=\"formBtn\">신고</button>\r\n                        }\r\n                    </div>\r\n                    <p className=\"content__text\">{contentArr.content}</p>\r\n                    <p className=\"content__time\">{dayKor}{contentArr.time}</p>\r\n                    {/* onSaveReport={(reportNum) => setCurrentReportNum(reportNum)}  */}\r\n                    {report ? <Report report={report} contentArr={contentArr} onReport={() => setReport(false)} onThreeReport={() => setVisible(true)} /> : \"\"}\r\n                </div> : \r\n                <div className=\"contentBox\">\r\n                    <h4>해당 게시물은 신고를 3번 이상 받아 숨김처리 되었습니다.</h4>\r\n                </div>)\r\n            }\r\n        </>\r\n        ) : \"\"}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/mockup.62c58335.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {dbService, authService, firebaseInstance} from \"./fbase\";\r\n\r\nconst Modal = ({ isShowing, hide, onAuth }) => {\r\n    const onClickAuth = (event) => {\r\n        firebaseInstance.auth().signInAnonymously()\r\n        .then((user) => {\r\n            console.log('user1 : ',user);\r\n            onAuth();\r\n        })\r\n        .catch((error) => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log('error Message : ',errorMessage);\r\n        });\r\n    };\r\n    \r\n    return (isShowing ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n            <div className=\"modal-overlay\"/>\r\n            <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n            <div className=\"modal\">\r\n                <div className=\"modal-header\">\r\n                <button type=\"button\" className=\"modal-close-button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={hide}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                </div>\r\n                <div className=\"authBox\" >\r\n                    <h4 className=\"authTitle\">익명으로 로그인하고 내 옷차림을 알려주세요!</h4>\r\n                    <button name=\"authBtn\" id=\"authBtn\" onClick={onClickAuth}>익명으로 로그인</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    </React.Fragment>, document.body\r\n    ) : null)\r\n};\r\n\r\nexport default Modal;","import { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsShowing(!isShowing);\r\n  }\r\n\r\n  return { isShowing, toggle }\r\n};\r\n\r\nexport default useModal;","import React, {useState, useEffect} from \"react\"\r\nimport {dbService, authService, firebaseInstance } from \"./fbase\";\r\nimport Create from \"./Create\";\r\nimport Content from \"./Content\";\r\nimport phoneImg from \"./assets/mockup.png\";\r\nimport Modal from \"./Modal\";\r\nimport useModal from \"./UseModal\";\r\nconst {kakao} = window;\r\n\r\nconst Board = ({coords}) => {\r\n    const [content, setContent] = useState([]);\r\n    const [ip, setIp] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    const [auth, setAuth] = useState(false);\r\n    const [authInfo, setAuthInfo] = useState(\"\");\r\n    const [user, setUser] = useState(\"\");\r\n    const [signOut, setSignOut] = useState(true); // singOut할 때 true\r\n    const {isShowing, toggle} = useModal();\r\n    let [signBtnText, setSignBtnText] = useState(\"LOG IN\");\r\n    let [distance, setDistance] = useState(false);\r\n    const [latlon, setLanlon] = useState(coords);\r\n\r\n    firebaseInstance.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n            var uid = user.uid;\r\n            setUser(user);\r\n        } else {\r\n        }\r\n    });\r\n\r\n    const onClickCreate = (event) => {\r\n        setCreating(true);\r\n        console.log('creating : ',creating);\r\n        console.log('auth : ',auth);\r\n        console.log('signOut : ',signOut);\r\n    }\r\n    useEffect(() => {\r\n        dbService.collection(\"ㅁㅇㅇㅇ\").onSnapshot((snapshot) => {\r\n            const contentArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setContent(contentArr);\r\n        })\r\n    }, []);\r\n\r\n    const onSignOut = () => {\r\n        console.log('click btn signOut : ',signOut);\r\n        console.log('click btn signBtnText : ',signBtnText);\r\n        if(signOut === true && signBtnText === \"LOG IN\") { // 로그아웃 되어있는 상태\r\n            firebaseInstance.auth().signInAnonymously()\r\n            .then((user) => {\r\n                console.log('logged in user : ',user);\r\n                setAuth(true);\r\n                setSignOut(false);\r\n                setSignBtnText(\"LOG OUT\");\r\n            })\r\n            .catch((error) => {\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                console.log('error Message : ',errorMessage);\r\n            });\r\n        } else if(signOut === false && signBtnText === \"LOG OUT\") { // 로그인 되어있는 상태\r\n            firebaseInstance.auth().signOut().then(() => {\r\n                console.log(\"Sign-out successful.\");\r\n                // window.location.reload(false);\r\n                setAuth(false);\r\n                setSignOut(true);\r\n                setSignBtnText(\"LOG IN\");\r\n            }).catch((error) => {\r\n                console.log('signOut error : ',error);\r\n            });\r\n        }\r\n    }\r\n    const updateDistance = async (contentArr, Boolean) => {\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            distance : Boolean\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        content.map(contentArr => {\r\n            var polyline = new kakao.maps.Polyline({\r\n                path : [\r\n                    new kakao.maps.LatLng(latlon.lat, latlon.lon),\r\n                    new kakao.maps.LatLng(contentArr.position.lat, contentArr.position.lon)\r\n                ]\r\n            });\r\n            if(polyline.getLength() <= 2000) {\r\n                updateDistance(contentArr, true);\r\n                console.log('true - ',polyline.getLength());\r\n            } else if(polyline.getLength() > 2000) {\r\n                updateDistance(contentArr, false);\r\n                console.log('false - ', polyline.getLength());\r\n            }\r\n        });\r\n    }, [creating]);\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"phoneWrap\">\r\n                <div className=\"phone\" style={{backgroundImage:\"url(\" + phoneImg + \")\"}}></div>\r\n                <div className=\"inner__phone\"></div>\r\n            </div>\r\n            <div sytle={{marginTop : 30}} className=\"inner__container\">\r\n                <button id=\"signOutBtn\" onClick={onSignOut}>{signBtnText}</button>\r\n                <button onClick={toggle} className=\"button-default\">\r\n                    <span onClick={onClickCreate} id=\"btnCreate\" style={{cursor:'pointer'}}>\r\n                    알려주기\r\n                    </span>\r\n                </button>\r\n                <div className=\"contentWrap\">\r\n                    <div className=\"inner__contentWrap\">\r\n                        {content.map((contentArr) =>\r\n                            <Content key={contentArr.id} contentArr={contentArr} isOwner={contentArr.uid == user.uid} distance={contentArr.distance} /> \r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n        {/* 로그인이 되어있지 않고 '알려주기'버튼을 클릭했을 때 */}\r\n        {!auth && signOut && creating ? <Modal isShowing={isShowing} hide={toggle} onAuth={()=>{ setAuth(true); setAuthInfo(user); setSignOut(false); setSignBtnText(\"LOG OUT\"); }} /> : \"\" }\r\n        {auth && creating ? <Create coords={coords} user={user} onCreate={() => setCreating(false)} /> : \"\" }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board;","export default __webpack_public_path__ + \"static/media/meoib_logo.2f4e5b89.png\";","import React from \"react\";\r\nimport logoImg from \"./assets/meoib_logo.png\";\r\n\r\nconst Basictool = () => {\r\n\r\n    return (\r\n        <>\r\n            <a href=\"/\" className=\"logo\"><img alt=\"로고\" src={logoImg} id=\"logo\" /></a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Basictool;","import React, {useEffect, useState} from \"react\";\nimport MapCom from \"./Map\";\nimport Weather from \"./Weather\";\nimport Board from \"./Board\";\nimport Basictool from \"./Basictool\";\nimport img01d from \"./assets/01d.jpg\";\nimport img01n from \"./assets/01n.jpg\";\nimport img02d from \"./assets/02d.jpg\";\nimport img03d from \"./assets/03d.jpg\";\nimport img04d from \"./assets/04d.jpg\";\n\nfunction App() {\n  const [coords, setCoords] = useState(\"\");\n  const [init, setInit] = useState(false);\n  let [bgName, setBgName] = useState(\"\");\n  let [bgUrl, setBgUrl] = useState(\"\");\n  let [region, setRegion] = useState(\"\");\n  let bgAddr = \"\";\n  useEffect(() => {\n    if(bgName != \"\" ) {\n      let module = require(`./assets/${bgName}.jpg`);\n      bgAddr = module.default;\n      setBgUrl(`url(${bgAddr})`);\n    } else {\n      console.log('bgName is NULL');\n    }\n  }, [bgName])\n  // let bgUrl = \"\";\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      if( position) {\n        setCoords({\n          lat : position.coords.latitude,\n          lon : position.coords.longitude\n        });\n      } else {\n        setCoords(null);\n      }\n      setInit(true);\n    });\n    \n  }, []);\n  console.log('region : ',region);\n  return (\n    <div className=\"App\" style={{backgroundImage:bgUrl}} >\n      <>\n      <Basictool />\n      {init ?  <MapCom coords={coords} region={(region) => setRegion(region)} /> : \"Can't access geolocation\"}\n      {init ?  <Weather coords={coords} region={region} bgName={(url) => setBgName(url)} /> : \"Can't access geolocation\"}\n      {init ?  <Board coords={coords} /> : \"Can't access geolocation\"}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/01d.4c197882.jpg\";","export default __webpack_public_path__ + \"static/media/01n.d2e60154.jpg\";","export default __webpack_public_path__ + \"static/media/02d.acfe2e07.jpg\";","export default __webpack_public_path__ + \"static/media/03d.d0e612a8.jpg\";","export default __webpack_public_path__ + \"static/media/04d.f33b1cb4.jpg\";"],"sourceRoot":""}