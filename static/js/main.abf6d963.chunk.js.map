{"version":3,"sources":["Map.js","api.js","Weather.js","fbase.js","Create.js","Report.js","Content.js","assets/mockup.png","Modal.js","UseModal.js","assets/meoib_logo.png","Board.js","Basictool.js","assets/dust_bg.jpg","App.js","index.js"],"names":["kakao","window","MapCom","coords","getContainer","a","document","getElementById","container","createMap","lat","lon","options","center","maps","LatLng","level","setTimeout","Map","getDistance","polyline","Polyline","path","console","log","getLength","useEffect","className","type","name","id","style","width","height","display","api","axios","create","baseURL","Weather","useState","getApi","weatherObj","setWeatherObj","getWeather","get","data","regieon","temp","main","feels_like","weather","icon","src","alt","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","dbService","auth","firestore","Create","user","onCreate","content","setContent","onSubmit","event","preventDefault","d","Date","day","getDay","hours","getHours","minutes","getMinutes","ampm","contentObj","position","timestamp","now","time","randomId","Math","floor","random","dayKor","reportNum","Number","uid","collection","add","then","docRef","onChange","value","target","Paper","elevation","faTimes","onClick","e","TextField","placeholder","required","autoFocus","Button","variant","endIcon","Icon","Report","onReport","contentArr","onThreeReport","onClickReport","alert","doc","update","Content","isOwner","editting","setEditting","newContent","setNewContent","report","setReport","visible","setVisible","toggleEdit","prev","DeleteContent","confirm","delete","Modal","isShowing","hide","onAuth","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","signInAnonymously","catch","error","code","errorMessage","message","body","useModal","setIsShowing","toggle","Board","creating","setCreating","setAuth","setAuthInfo","setUser","signOut","setSignOut","onAuthStateChanged","onSnapshot","snapshot","docs","map","backgroundImage","phoneImg","sytle","marginTop","cursor","Basictool","href","logoImg","App","setCoords","init","setInit","navigator","geolocation","getCurrentPosition","latitude","longitude","render","StrictMode"],"mappings":"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","file":"static/js/main.abf6d963.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nconst {kakao} = window;\r\n\r\nconst MapCom = ({coords}) => {\r\n    const getContainer = async () => {\r\n        const container = await document.getElementById(\"map\");\r\n        createMap(coords.lat, coords.lon, container);\r\n    };\r\n\r\n    const createMap = (lat, lon, container) => {\r\n        const options = { //지도를 생성할 때 필요한 기본 옵션\r\n            center: new kakao.maps.LatLng(lat, lon), //지도의 중심좌표.\r\n            level: 4 //지도의 레벨(확대, 축소 정도)\r\n        };\r\n        const map = setTimeout(() => { //지도 생성 및 객체 리턴\r\n            new kakao.maps.Map(container, options);\r\n        }, 1000);\r\n\r\n        getDistance(lat, lon);\r\n    };\r\n\r\n    const getDistance = (lat, lon) => {\r\n        var polyline = new kakao.maps.Polyline({\r\n            path : [\r\n                new kakao.maps.LatLng(lat, lon),\r\n                new kakao.maps.LatLng(36.365243, 127.436007)\r\n            ]\r\n        });\r\n        console.log('polyline.getLength():', polyline.getLength());\r\n        return polyline.getLength();\r\n        // 내 위치에서 1km 반경에 있는 사람들의 글만 보이게\r\n    }\r\n\r\n    useEffect(() => {\r\n        getContainer();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"popup\">\r\n            <input type=\"hidden\" name=\"otherLat\" id=\"otherLat\" />\r\n            <input type=\"hidden\" name=\"otherLon\" id=\"otherLon\" />\r\n            <div id=\"map\" style={{width:400, height:400, display:\"none\"}} />\r\n        </div>\r\n    )\r\n};\r\nexport default MapCom;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL : \"https://api.openweathermap.org/data/2.5\",\r\n});\r\n\r\nexport const weatherApi = (lat, lon) => api.get(`weather?lat=${lat}&lon=${lon}&appid=77371d8edaa624e1334298cf740c7bce&units=metric`);\r\n// export const userIpApi = () => `https://api.ipdata.co/?api-key=1ab80a79ea5f35a9d21e9b64415a3e1a08f30b0118f7f44223247e24`;\r\nexport const userIpApi = () => `https://api.ip.pe.kr/`;","import React, {useEffect, useState} from \"react\";\r\nimport {weatherApi} from \"./api\";\r\n\r\nconst Weather = ({coords}) => {\r\n    // 위도 경도 apiKey 보내기\r\n    const [api, getApi] = useState(false);\r\n    const [weatherObj, setWeatherObj] = useState(null);\r\n    const getWeather = async () => {\r\n        const {data} = await weatherApi(coords.lat, coords.lon);\r\n        setWeatherObj({\r\n            regieon : data.name,\r\n            temp : data.main.temp,\r\n            feels_like : data.main.feels_like,\r\n            weather : data.weather[0].main,\r\n            icon : data.weather[0].icon\r\n        });\r\n        getApi(true);\r\n    }\r\n    useEffect(() => {\r\n        getWeather();\r\n    }, []);\r\n    return (\r\n        <>\r\n        {api ? \r\n            (\r\n                <>\r\n                    <div className=\"weather_box\">\r\n                        <div className=\"weather_icon_box\">\r\n                            <img className=\"weather_icon\" src={`http://openweathermap.org/img/w/${weatherObj.icon}.png`} alt=\"날씨 아이콘\" />\r\n                        </div>\r\n                        <p className=\"weatherText\">현재 위치 {weatherObj.regieon}</p>\r\n                        <p className=\"weatherText\">기온 {weatherObj.temp}˚C</p>\r\n                        <p className=\"weatherText\">체감 {weatherObj.feels_like}˚C</p>\r\n                        {/* <p>날씨-{weatherObj.weather}</p> */}\r\n                    </div>\r\n                </>\r\n            ) \r\n            : \r\n            \"Can't get the weather\"\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBC42chVkeAv0OZaaosfJSxw6cSECqHerU\",\r\n    authDomain: \"mies-9b170.firebaseapp.com\",\r\n    projectId: \"mies-9b170\",\r\n    storageBucket: \"mies-9b170.appspot.com\",\r\n    messagingSenderId: \"539673967625\",\r\n    appId: \"1:539673967625:web:8ff5ca38849c7fab108cd8\",\r\n    measurementId: \"G-T25N9822NR\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();","import { dbService } from \"./fbase\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Ip from \"./Ip\";\r\nimport {userIpApi} from \"./api\";\r\nimport { Paper } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Create = ({coords, user, onCreate}) => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    <Ip />\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let d = new Date();\r\n        let day = d.getDay(); // 시\r\n        let hours = d.getHours(); // 시\r\n        let minutes = d.getMinutes();  // 분\r\n        let ampm = \"\";\r\n        if(hours < 13) {\r\n            ampm = \"오전\"\r\n        } else {\r\n            ampm = \"오후\";\r\n            hours -= 12;\r\n        }   \r\n        const contentObj = {\r\n            content : content,\r\n            position : coords,\r\n            // town : \"\", 지도api로 동네를 알아낼 수 있나..? => 네이버 api는 가넝\r\n            timestamp : Date.now(),\r\n            time : ampm+\" \" + hours+\"시 \"+minutes+\"분\",\r\n            randomId : Math.floor(Math.random() * 101),\r\n            day : day,\r\n            dayKor : \"오늘\",\r\n            reportNum : Number(\"0\"),\r\n            uid : user.uid\r\n        }\r\n        console.log('contentObj:', contentObj);\r\n\r\n        await dbService.collection(\"ㅁㅇㅇㅇ\").add(contentObj).then((docRef) => {console.log('docRef id:', docRef.id)});\r\n        setContent(\"\");\r\n\r\n        onCreate();\r\n    }\r\n    const onChange = async (event) => {\r\n        const {target:{value}} = event;\r\n        setContent(value);\r\n    }\r\n    return (\r\n        <div className=\"bgCover\">\r\n            <Paper elevation={3} className=\"boardBox\">\r\n                <form className=\"board\" onSubmit={onSubmit}>\r\n                    <FontAwesomeIcon className=\"boardCloseIcon\" icon={faTimes} onClick={e => onCreate()} />\r\n                    <h3 className=\"boardTitle\">난 오늘 이렇게 입었어!</h3>\r\n                    {/* <input className=\"boardInput\" type=\"text\" placeholder=\"오늘 날씨에 맞는 옷차림을 알려주세요!\" value={content} required autoFocus onChange={onChange} /> */}\r\n                    <TextField className=\"boardInput\" placeholder=\"오늘 날씨에 맞는 옷차림을 알려주세요!\" value={content} required autoFocus onChange={onChange}></TextField>\r\n                    <Button type=\"submit\" variant=\"contained\" className=\"btnCreate\" endIcon={<Icon>send</Icon>}>알려주기</Button>\r\n                </form>\r\n            </Paper>\r\n                {/* <button onClick={toggleEditing} className=\"formBtn cancelBtn\">취소</button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;\r\n","import React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService } from \"./fbase\";\r\n\r\nconst Report = ({onReport, contentArr, onThreeReport}) => {\r\n    let [reportNum, setReportNum] = useState(contentArr.reportNum + 1);\r\n    const onClickReport = async () => {\r\n        alert(\"신고하시겠습니까? 동일 게시물에 3회 이상 신고가 되면 숨김 처리 됩니다.\");\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            reportNum : reportNum\r\n        });\r\n        onReport(); // report 박스 안보이게 설정\r\n        if(reportNum >= 3) {onThreeReport();}\r\n    }\r\n    return (\r\n        <div className=\"reportBox\">\r\n            <h4>신 고</h4>\r\n            <FontAwesomeIcon className=\"reportCloseIcon\" icon={faTimes} onClick={e => onReport()} />\r\n            <ul>\r\n                <li value=\"01\" onClick={onClickReport}>1. 불쾌함, 욕설, 비하</li>\r\n                <li value=\"02\" onClick={onClickReport}>2. 광고</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report;","import React, {useEffect, useState} from \"react\";\r\nimport { dbService } from \"./fbase\";\r\nimport Report from \"./Report\";\r\n\r\nconst Content = ({contentArr, isOwner}) => {\r\n    const [editting, setEditting] = useState(false);\r\n    const [newContent, setNewContent] = useState(contentArr.content);\r\n    const [report, setReport] = useState(\"\");\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    let d = new Date();\r\n    let day = d.getDay();\r\n    let dayKor = \"\";\r\n    if (contentArr.day !== day) {\r\n        dayKor = \"어제 \"\r\n    } else {\r\n        dayKor = \"오늘 \"\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(contentArr.reportNum >= 3) {setVisible(true);}\r\n        else {}\r\n    }, []); \r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {target:{value}} = event;\r\n        setNewContent(value);\r\n    }\r\n    const toggleEdit = () => setEditting((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            content : newContent\r\n        });\r\n        setEditting(false);\r\n    }\r\n    const DeleteContent = async () => {\r\n        const confirm = window.confirm(\"정말 이 글을 삭제하시겠어요?\");\r\n        if(confirm) {\r\n            await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).delete()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {editting ? (\r\n                    <>\r\n                    <form className=\"contentBox\" onSubmit={onSubmit}>\r\n                        <input className=\"\" value={newContent} onChange={onChange} name=\"newContent\" placeholder=\"내용을 수정해주세요\"></input>\r\n                        <input type=\"submit\" value=\"수정완료\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEdit}>수정취소</button>\r\n                    </>\r\n                )\r\n            :\r\n                // visible이 false이면 보여주고 true이면 숨기기\r\n                (!visible ? <div className=\"contentBox\"> \r\n                    <p className=\"content__owner\">랜선친구 {contentArr.randomId}</p>\r\n                    <div className=\"formBtnBox\">\r\n                        {isOwner ? \r\n                        <>\r\n                            <button onClick={toggleEdit} className=\"formBtn\">수정</button>\r\n                            <button onClick={DeleteContent} className=\"formBtn\">삭제</button>\r\n                        </> \r\n                        : \r\n                            <button onClick={()=>setReport(true)} className=\"formBtn\">신고</button>\r\n                        }\r\n                    </div>\r\n                    <p className=\"content__text\">{contentArr.content}</p>\r\n                    <p className=\"content__time\">{dayKor}{contentArr.time}</p>\r\n                    {/* onSaveReport={(reportNum) => setCurrentReportNum(reportNum)}  */}\r\n                    {report ? <Report report={report} contentArr={contentArr} onReport={() => setReport(false)} onThreeReport={() => setVisible(true)} /> : \"\"}\r\n                </div> : \r\n                <div className=\"contentBox\">\r\n                    <h4>해당 게시물은 신고를 3번 이상 받아 숨김처리 되었습니다.</h4>\r\n                </div>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/mockup.62c58335.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {dbService, authService, firebaseInstance} from \"./fbase\";\r\n\r\nconst Modal = ({ isShowing, hide, onAuth }) => {\r\n    const onClickAuth = (event) => {\r\n        firebaseInstance.auth().signInAnonymously()\r\n        .then((user) => {\r\n            console.log('user1 : ',user);\r\n            onAuth();\r\n        })\r\n        .catch((error) => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log('error Message : ',errorMessage);\r\n        });\r\n    };\r\n    \r\n    return (isShowing ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n            <div className=\"modal-overlay\"/>\r\n            <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n            <div className=\"modal\">\r\n                <div className=\"modal-header\">\r\n                <button type=\"button\" className=\"modal-close-button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={hide}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                </div>\r\n                <div className=\"authBox\" >\r\n                    <h4 className=\"authTitle\">익명으로 로그인하고 내 옷차림을 알려주세요!</h4>\r\n                    <button name=\"authBtn\" id=\"authBtn\" onClick={onClickAuth}>익명으로 로그인</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    </React.Fragment>, document.body\r\n    ) : null)\r\n};\r\n\r\nexport default Modal;","import { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsShowing(!isShowing);\r\n  }\r\n\r\n  return { isShowing, toggle }\r\n};\r\n\r\nexport default useModal;","export default __webpack_public_path__ + \"static/media/meoib_logo.2f4e5b89.png\";","import React, {useState, useEffect} from \"react\"\r\nimport {dbService, authService, firebaseInstance } from \"./fbase\";\r\nimport Create from \"./Create\";\r\nimport Content from \"./Content\";\r\nimport phoneImg from \"./assets/mockup.png\";\r\n// import Authform from \"./Authform\";\r\nimport Modal from \"./Modal\";\r\nimport useModal from \"./UseModal\";\r\nimport logoImg from \"./assets/meoib_logo.png\";\r\n\r\nconst Board = ({coords}) => {\r\n    const [content, setContent] = useState([]);\r\n    const [ip, setIp] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    const [auth, setAuth] = useState(false);\r\n    const [authInfo, setAuthInfo] = useState(\"\");\r\n    const [user, setUser] = useState(\"\");\r\n    const [signOut, setSignOut] = useState(true); // singOut할 때 true\r\n\r\n    const {isShowing, toggle} = useModal();\r\n    \r\n    firebaseInstance.auth().onAuthStateChanged((user) => {\r\n        if (user) {\r\n            var uid = user.uid;\r\n            setUser(user);\r\n        } else {\r\n        }\r\n    });\r\n\r\n    const onClickCreate = (event) => {\r\n        setCreating(true);\r\n        console.log('creating : ',creating);\r\n        console.log('auth : ',auth);\r\n        console.log('signOut : ',signOut);\r\n    }\r\n    useEffect(() => {\r\n        dbService.collection(\"ㅁㅇㅇㅇ\").onSnapshot((snapshot) => {\r\n            const contentArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setContent(contentArr);\r\n        })\r\n    }, []);\r\n\r\n    const onSignOut = () => {\r\n        firebaseInstance.auth().signOut().then(() => {\r\n            console.log(\"Sign-out successful.\");\r\n            // window.location.reload(false);\r\n            setAuth(false);\r\n            setSignOut(true);\r\n        }).catch((error) => {\r\n            console.log('signOut error : ',error);\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"phoneWrap\">\r\n                <div className=\"phone\" style={{backgroundImage:\"url(\" + phoneImg + \")\"}}></div>\r\n                <div className=\"inner__phone\"></div>\r\n            </div>\r\n            <div sytle={{marginTop : 30}} className=\"inner__container\">\r\n                <button id=\"signOutBtn\" onClick={onSignOut}>LOG OUT</button>\r\n                <button onClick={toggle} className=\"button-default\">\r\n                    <span onClick={onClickCreate} id=\"btnCreate\" style={{cursor:'pointer'}}>\r\n                    알려주기\r\n                    </span>\r\n                </button>\r\n                <div className=\"contentWrap\">\r\n                    <div className=\"inner__contentWrap\">\r\n                        {content.map(contentArr => \r\n                        //  isOwner={contentArr.ip === ip}\r\n                            <Content key={contentArr.id} contentArr={contentArr} isOwner={contentArr.uid == user.uid} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n        {/* 로그인이 되어있지 않고 '알려주기'버튼을 클릭했을 때 */}\r\n        {!auth && signOut && creating ? <Modal isShowing={isShowing} hide={toggle} onAuth={()=>{ setAuth(true); setAuthInfo(user); setSignOut(false); }} /> : \"\" }\r\n        {auth && creating ? <Create coords={coords} user={user} onCreate={() => setCreating(false)} /> : \"\" }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport logoImg from \"./assets/meoib_logo.png\";\r\n\r\nconst Basictool = () => {\r\n\r\n    return (\r\n        <>\r\n            <a href=\"/\" className=\"logo\"><img alt=\"로고\" src={logoImg} id=\"logo\" /></a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Basictool;","export default __webpack_public_path__ + \"static/media/dust_bg.cbbcb2e5.jpg\";","import React, {useEffect, useState} from \"react\";\nimport MapCom from \"./Map\";\nimport Weather from \"./Weather\";\nimport Board from \"./Board\";\nimport Basictool from \"./Basictool\";\nimport url from \"./assets/dust_bg.jpg\";\n\nfunction App() {\n  const [coords, setCoords] = useState(\"\");\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      if( position) {\n        setCoords({\n          lat : position.coords.latitude,\n          lon : position.coords.longitude\n        });\n      } else {\n        setCoords(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <>\n      <Basictool />\n      {init ?  <MapCom coords={coords} /> : \"Can't access geolocation\"}\n      {init ?  <Weather coords={coords} /> : \"Can't access geolocation\"}\n      {init ?  <Board coords={coords} /> : \"Can't access geolocation\"}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}