{"version":3,"sources":["Map.js","api.js","Weather.js","fbase.js","Create.js","Report.js","Content.js","assets/mockup.png","Modal.js","UseModal.js","assets/meoib_logo.png","Board.js","Basictool.js","assets/dust_bg.jpg","App.js","index.js"],"names":["kakao","window","MapCom","coords","getContainer","a","document","getElementById","container","createMap","lat","lon","options","center","maps","LatLng","level","setTimeout","Map","getDistance","polyline","Polyline","path","console","log","getLength","useEffect","className","type","name","id","style","width","height","display","api","axios","create","baseURL","Weather","useState","getApi","weatherObj","setWeatherObj","getWeather","get","data","regieon","temp","main","feels_like","weather","icon","src","alt","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","dbService","auth","firestore","Create","user","onCreate","content","setContent","onSubmit","event","preventDefault","d","Date","day","getDay","hours","getHours","minutes","getMinutes","ampm","contentObj","position","timestamp","now","time","randomId","Math","floor","random","dayKor","reportNum","uid","collection","add","then","docRef","onChange","value","target","faTimes","onClick","e","placeholder","required","autoFocus","Report","onReport","contentArr","onClickReport","alert","doc","update","report","currentReportNum","Content","isOwner","editting","setEditting","newContent","setNewContent","setReport","contentBox","useRef","toggleEdit","prev","DeleteContent","confirm","delete","ref","Modal","isShowing","hide","onAuth","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","data-dismiss","aria-label","signInAnonymously","catch","error","code","errorMessage","message","body","useModal","setIsShowing","toggle","Board","creating","setCreating","setAuth","setAuthInfo","setUser","signOut","setSignOut","onAuthStateChanged","onSnapshot","snapshot","docs","map","backgroundImage","phoneImg","sytle","marginTop","cursor","Basictool","href","logoImg","App","setCoords","init","setInit","navigator","geolocation","getCurrentPosition","latitude","longitude","render","StrictMode"],"mappings":"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","file":"static/js/main.2b3b2000.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nconst {kakao} = window;\r\n\r\nconst MapCom = ({coords}) => {\r\n    const getContainer = async () => {\r\n        const container = await document.getElementById(\"map\");\r\n        createMap(coords.lat, coords.lon, container);\r\n    };\r\n\r\n    const createMap = (lat, lon, container) => {\r\n        const options = { //지도를 생성할 때 필요한 기본 옵션\r\n            center: new kakao.maps.LatLng(lat, lon), //지도의 중심좌표.\r\n            level: 4 //지도의 레벨(확대, 축소 정도)\r\n        };\r\n        const map = setTimeout(() => { //지도 생성 및 객체 리턴\r\n            new kakao.maps.Map(container, options);\r\n        }, 1000);\r\n\r\n        getDistance(lat, lon);\r\n    };\r\n\r\n    const getDistance = (lat, lon) => {\r\n        var polyline = new kakao.maps.Polyline({\r\n            path : [\r\n                new kakao.maps.LatLng(lat, lon),\r\n                new kakao.maps.LatLng(36.365243, 127.436007)\r\n            ]\r\n        });\r\n        console.log('polyline.getLength():', polyline.getLength());\r\n        return polyline.getLength();\r\n        // 내 위치에서 1km 반경에 있는 사람들의 글만 보이게\r\n    }\r\n\r\n    useEffect(() => {\r\n        getContainer();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"popup\">\r\n            <input type=\"hidden\" name=\"otherLat\" id=\"otherLat\" />\r\n            <input type=\"hidden\" name=\"otherLon\" id=\"otherLon\" />\r\n            <div id=\"map\" style={{width:400, height:400, display:\"none\"}} />\r\n        </div>\r\n    )\r\n};\r\nexport default MapCom;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL : \"https://api.openweathermap.org/data/2.5\",\r\n});\r\n\r\nexport const weatherApi = (lat, lon) => api.get(`weather?lat=${lat}&lon=${lon}&appid=77371d8edaa624e1334298cf740c7bce&units=metric`);\r\n// export const userIpApi = () => `https://api.ipdata.co/?api-key=1ab80a79ea5f35a9d21e9b64415a3e1a08f30b0118f7f44223247e24`;\r\nexport const userIpApi = () => `https://api.ip.pe.kr/`;","import React, {useEffect, useState} from \"react\";\r\nimport {weatherApi} from \"./api\";\r\n\r\nconst Weather = ({coords}) => {\r\n    // 위도 경도 apiKey 보내기\r\n    const [api, getApi] = useState(false);\r\n    const [weatherObj, setWeatherObj] = useState(null);\r\n    const getWeather = async () => {\r\n        const {data} = await weatherApi(coords.lat, coords.lon);\r\n        setWeatherObj({\r\n            regieon : data.name,\r\n            temp : data.main.temp,\r\n            feels_like : data.main.feels_like,\r\n            weather : data.weather[0].main,\r\n            icon : data.weather[0].icon\r\n        });\r\n        getApi(true);\r\n    }\r\n    useEffect(() => {\r\n        getWeather();\r\n    }, []);\r\n    return (\r\n        <>\r\n        {api ? \r\n            (\r\n                <>\r\n                    <div className=\"weather_box\">\r\n                        <div className=\"weather_icon_box\">\r\n                            <img className=\"weather_icon\" src={`http://openweathermap.org/img/w/${weatherObj.icon}.png`} alt=\"날씨 아이콘\" />\r\n                        </div>\r\n                        <p className=\"weatherText\">현재 위치 {weatherObj.regieon}</p>\r\n                        <p className=\"weatherText\">기온 {weatherObj.temp}˚C</p>\r\n                        <p className=\"weatherText\">체감 {weatherObj.feels_like}˚C</p>\r\n                        {/* <p>날씨-{weatherObj.weather}</p> */}\r\n                    </div>\r\n                </>\r\n            ) \r\n            : \r\n            \"Can't get the weather\"\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBC42chVkeAv0OZaaosfJSxw6cSECqHerU\",\r\n    authDomain: \"mies-9b170.firebaseapp.com\",\r\n    projectId: \"mies-9b170\",\r\n    storageBucket: \"mies-9b170.appspot.com\",\r\n    messagingSenderId: \"539673967625\",\r\n    appId: \"1:539673967625:web:8ff5ca38849c7fab108cd8\",\r\n    measurementId: \"G-T25N9822NR\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();","import { dbService } from \"./fbase\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Ip from \"./Ip\";\r\nimport {userIpApi} from \"./api\";\r\n\r\nconst Create = ({coords, user, onCreate}) => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    <Ip />\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let d = new Date();\r\n        let day = d.getDay(); // 시\r\n        let hours = d.getHours(); // 시\r\n        let minutes = d.getMinutes();  // 분\r\n        let ampm = \"\";\r\n        if(hours < 13) {\r\n            ampm = \"오전\"\r\n        } else {\r\n            ampm = \"오후\";\r\n            hours -= 12;\r\n        }   \r\n        const contentObj = {\r\n            content : content,\r\n            position : coords,\r\n            // town : \"\", 지도api로 동네를 알아낼 수 있나..? => 네이버 api는 가넝\r\n            timestamp : Date.now(),\r\n            time : ampm+\" \" + hours+\"시 \"+minutes+\"분\",\r\n            randomId : Math.floor(Math.random() * 101),\r\n            day : day,\r\n            dayKor : \"오늘\",\r\n            reportNum : 0,\r\n            uid : user.uid\r\n        }\r\n        console.log('contentObj:', contentObj);\r\n\r\n        await dbService.collection(\"ㅁㅇㅇㅇ\").add(contentObj).then((docRef) => {console.log('docRef id:', docRef.id)});\r\n        setContent(\"\");\r\n\r\n        onCreate();\r\n    }\r\n    const onChange = async (event) => {\r\n        const {target:{value}} = event;\r\n        setContent(value);\r\n    }\r\n    return (\r\n        <div className=\"bgCover\">\r\n            <div className=\"boardBox\">\r\n                <form className=\"board\" onSubmit={onSubmit}>\r\n                    <FontAwesomeIcon className=\"boardCloseIcon\" icon={faTimes} onClick={e => onCreate()} />\r\n                    <h3 className=\"boardTitle\">난 오늘 이렇게 입었어!</h3>\r\n                    <input className=\"boardInput\" type=\"text\" placeholder=\"오늘 날씨에 맞는 옷차림을 알려주세요!\" value={content} required autoFocus onChange={onChange} />\r\n                    <input type=\"submit\" value=\"알려주기\" className=\"formBtn btnCreate\" />\r\n                </form>\r\n                {/* <button onClick={toggleEditing} className=\"formBtn cancelBtn\">취소</button> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService, storageService } from \"./fbase\";\r\n\r\nconst Report = ({onReport, contentArr}) => {\r\n    const onClickReport = async () => {\r\n        alert(\"신고하시겠습니까? 동일 게시물에 3회 이상 신고가 되면 숨김 처리 됩니다.\");\r\n        let currentReportNum = \"\";\r\n        // 신고창의 부모창에 hidden 으로 넣어져있는 reportNum 가져와서 ++1;\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            report : currentReportNum + 1\r\n        });\r\n        onReport();\r\n    }\r\n    return (\r\n        <div className=\"reportBox\">\r\n            <h4>신 고</h4>\r\n            <FontAwesomeIcon className=\"reportCloseIcon\" icon={faTimes} onClick={e => onReport()} />\r\n            <ul>\r\n                <li value=\"01\" onClick={onClickReport}>1. 불쾌함, 욕설, 비하</li>\r\n                <li value=\"02\" onClick={onClickReport}>2. 광고</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report;","import React, {useEffect, useState, useRef} from \"react\";\r\nimport { dbService, storageService } from \"./fbase\";\r\nimport Report from \"./Report\";\r\n\r\nconst Content = ({contentArr, isOwner}) => {\r\n    const [editting, setEditting] = useState(false);\r\n    const [newContent, setNewContent] = useState(contentArr.content);\r\n    const [report, setReport] = useState(false);\r\n    const contentBox = useRef();\r\n    const reportNum = useRef();\r\n\r\n    let d = new Date();\r\n    let day = d.getDay();\r\n    let dayKor = \"\";\r\n    if (contentArr.day !== day) {\r\n        dayKor = \"어제 \"\r\n    } else {\r\n        dayKor = \"오늘 \"\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {target:{value}} = event;\r\n        setNewContent(value);\r\n    }\r\n    const toggleEdit = () => setEditting((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            content : newContent\r\n        });\r\n        setEditting(false);\r\n    }\r\n    const DeleteContent = async () => {\r\n        const confirm = window.confirm(\"정말 이 글을 삭제하시겠어요?\");\r\n        if(confirm) {\r\n            await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).delete()\r\n        }\r\n    }\r\n    const toReport = () => {\r\n        setReport(true);\r\n    }\r\n    // if(this.contentBox.reportNum) {\r\n    //     this.\r\n    // }\r\n    return (\r\n        <>\r\n            {editting ? (\r\n                    <>\r\n                    <form className=\"contentBox\" onSubmit={onSubmit}>\r\n                        <input className=\"\" value={newContent} onChange={onChange} name=\"newContent\" placeholder=\"내용을 수정해주세요\"></input>\r\n                        <input type=\"submit\" value=\"수정완료\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEdit}>수정취소</button>\r\n                    </>\r\n                )\r\n            :\r\n                <div className=\"contentBox\" ref={contentBox}>\r\n                    <p className=\"content__owner\">랜선친구 {contentArr.randomId}</p>\r\n                    <div className=\"formBtnBox\">\r\n                        {isOwner ? \r\n                        <>\r\n                            <button onClick={toggleEdit} className=\"formBtn\">수정</button>\r\n                            <button onClick={DeleteContent} className=\"formBtn\">삭제</button>\r\n                        </> \r\n                        : \r\n                            <button onClick={toReport} className=\"formBtn\">신고</button>\r\n                        }\r\n                    </div>\r\n                    <p className=\"content__text\">{contentArr.content}</p>\r\n                    <p className=\"content__time\">{dayKor}{contentArr.time}</p>\r\n                    <input type=\"hidden\" ref={reportNum} name=\"reportNum\" id=\"reportNum\" value={contentArr.reportNum}></input>\r\n                    {report ? <Report report={report} contentArr={contentArr} onReport={() => setReport(false)} /> : \"\"}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/mockup.62c58335.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {dbService, authService, firebaseInstance} from \"./fbase\";\r\n\r\nconst Modal = ({ isShowing, hide, onAuth }) => {\r\n    const onClickAuth = (event) => {\r\n        firebaseInstance.auth().signInAnonymously()\r\n        .then((user) => {\r\n            console.log('user1 : ',user);\r\n            onAuth();\r\n        })\r\n        .catch((error) => {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n            console.log('error Message : ',errorMessage);\r\n        });\r\n    };\r\n    \r\n    return (isShowing ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n            <div className=\"modal-overlay\"/>\r\n            <div className=\"modal-wrapper\" aria-modal aria-hidden tabIndex={-1} role=\"dialog\">\r\n            <div className=\"modal\">\r\n                <div className=\"modal-header\">\r\n                <button type=\"button\" className=\"modal-close-button\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={hide}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                </div>\r\n                <div className=\"authBox\" >\r\n                    <h4 className=\"authTitle\">익명으로 로그인하고 내 옷차림을 알려주세요!</h4>\r\n                    <button name=\"authBtn\" id=\"authBtn\" onClick={onClickAuth}>익명으로 로그인</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    </React.Fragment>, document.body\r\n    ) : null)\r\n};\r\n\r\nexport default Modal;","import { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsShowing(!isShowing);\r\n  }\r\n\r\n  return { isShowing, toggle }\r\n};\r\n\r\nexport default useModal;","export default __webpack_public_path__ + \"static/media/meoib_logo.2f4e5b89.png\";","import React, {useState, useEffect} from \"react\"\r\nimport {dbService, authService, firebaseInstance } from \"./fbase\";\r\nimport Create from \"./Create\";\r\nimport Content from \"./Content\";\r\nimport phoneImg from \"./assets/mockup.png\";\r\n// import Authform from \"./Authform\";\r\nimport Modal from \"./Modal\";\r\nimport useModal from \"./UseModal\";\r\nimport logoImg from \"./assets/meoib_logo.png\";\r\n\r\nconst Board = ({coords}) => {\r\n    const [content, setContent] = useState([]);\r\n    const [ip, setIp] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    const [auth, setAuth] = useState(false);\r\n    const [authInfo, setAuthInfo] = useState(\"\");\r\n    const [user, setUser] = useState(\"\");\r\n    const [signOut, setSignOut] = useState(true); // singOut할 때 true\r\n\r\n    const {isShowing, toggle} = useModal();\r\n    \r\n    firebaseInstance.auth().onAuthStateChanged((user) => {\r\n        console.log('use2r : ',user);\r\n        if (user) {\r\n            var uid = user.uid;\r\n            setUser(user);\r\n        } else {\r\n        }\r\n    });\r\n\r\n    const onClickCreate = (event) => {\r\n        setCreating(true);\r\n        console.log('creating : ',creating);\r\n        console.log('auth : ',auth);\r\n        console.log('signOut : ',signOut);\r\n    }\r\n    // function json(url) {\r\n    //     return fetch(url).then(res => res.json());\r\n    // }\r\n    // json(`https://api.ipdata.co?api-key=1ab80a79ea5f35a9d21e9b64415a3e1a08f30b0118f7f44223247e24`).then(data => {\r\n    //     setIp(data.ip);\r\n    // });\r\n    useEffect(() => {\r\n        dbService.collection(\"ㅁㅇㅇㅇ\").onSnapshot((snapshot) => {\r\n            const contentArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setContent(contentArr);\r\n        })\r\n    }, []);\r\n\r\n    const onSignOut = () => {\r\n        firebaseInstance.auth().signOut().then(() => {\r\n            console.log(\"Sign-out successful.\");\r\n            setAuth(false);\r\n            setSignOut(true);\r\n        }).catch((error) => {\r\n            console.log('signOut error : ',error);\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"phoneWrap\">\r\n                <div className=\"phone\" style={{backgroundImage:\"url(\" + phoneImg + \")\"}}></div>\r\n                <div className=\"inner__phone\"></div>\r\n            </div>\r\n            <div sytle={{marginTop : 30}} className=\"inner__container\">\r\n                <button id=\"signOutBtn\" onClick={onSignOut}>LOG OUT</button>\r\n                <button onClick={toggle} className=\"button-default\">\r\n                    <span onClick={onClickCreate} id=\"btnCreate\" style={{cursor:'pointer'}}>\r\n                    알려주기\r\n                    </span>\r\n                </button>\r\n                <div className=\"contentWrap\">\r\n                    <div className=\"inner__contentWrap\">\r\n                        {content.map(contentArr => \r\n                        //  isOwner={contentArr.ip === ip}\r\n                            <Content key={contentArr.id} contentArr={contentArr} isOwner={contentArr.uid} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n        {/* 로그인이 되어있지 않고 '알려주기'버튼을 클릭했을 때 */}\r\n        {!auth && signOut && creating ? <Modal isShowing={isShowing} hide={toggle} onAuth={()=>{ setAuth(true); setAuthInfo(user); setSignOut(false); }} /> : \"\" }\r\n        {auth && creating ? <Create coords={coords} user={user} onCreate={() => setCreating(false)} /> : \"\" }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport logoImg from \"./assets/meoib_logo.png\";\r\n\r\nconst Basictool = () => {\r\n\r\n    return (\r\n        <>\r\n            <a href=\"/\" className=\"logo\"><img alt=\"로고\" src={logoImg} id=\"logo\" /></a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Basictool;","export default __webpack_public_path__ + \"static/media/dust_bg.cbbcb2e5.jpg\";","import React, {useEffect, useState} from \"react\";\nimport MapCom from \"./Map\";\nimport Weather from \"./Weather\";\nimport Board from \"./Board\";\nimport Basictool from \"./Basictool\";\nimport url from \"./assets/dust_bg.jpg\";\n\nfunction App() {\n  const [coords, setCoords] = useState(\"\");\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      if( position) {\n        setCoords({\n          lat : position.coords.latitude,\n          lon : position.coords.longitude\n        });\n      } else {\n        setCoords(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <>\n      <Basictool />\n      {init ?  <MapCom coords={coords} /> : \"Can't access geolocation\"}\n      {init ?  <Weather coords={coords} /> : \"Can't access geolocation\"}\n      {init ?  <Board coords={coords} /> : \"Can't access geolocation\"}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}