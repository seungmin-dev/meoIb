{"version":3,"sources":["Map.js","api.js","Weather.js","fbase.js","Create.js","Report.js","Content.js","assets/mockup.png","assets/meoib_logo.png","Board.js","Basictool.js","assets/dust_bg.jpg","App.js","index.js"],"names":["kakao","window","MapCom","coords","getContainer","a","document","getElementById","container","createMap","lat","lon","options","center","maps","LatLng","level","setTimeout","Map","getDistance","polyline","Polyline","path","console","log","getLength","useEffect","className","type","name","id","style","width","height","display","api","axios","create","baseURL","Weather","useState","getApi","weatherObj","setWeatherObj","getWeather","get","data","regieon","temp","main","feels_like","weather","icon","src","alt","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","dbService","firestore","Create","ip","onCreate","content","setContent","onSubmit","event","preventDefault","d","Date","day","getDay","hours","getHours","minutes","getMinutes","ampm","contentObj","position","timestamp","now","time","randomId","Math","floor","random","dayKor","collection","add","then","docRef","onChange","value","target","faTimes","onClick","e","placeholder","required","autoFocus","Report","report","Content","key","contentArr","isOwner","editting","setEditting","newContent","setNewContent","setReport","toggleEdit","prev","doc","update","DeleteContent","confirm","delete","Board","url","setIp","creating","setCreating","btnCreateValue","fetch","res","json","onSnapshot","snapshot","docs","map","backgroundImage","phoneImg","sytle","marginTop","cursor","Basictool","href","logoImg","App","setCoords","init","setInit","navigator","geolocation","getCurrentPosition","latitude","longitude","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69a9e52e.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nconst {kakao} = window;\r\n\r\nconst MapCom = ({coords}) => {\r\n    const getContainer = async () => {\r\n        const container = await document.getElementById(\"map\");\r\n        createMap(coords.lat, coords.lon, container);\r\n    };\r\n\r\n    const createMap = (lat, lon, container) => {\r\n        const options = { //지도를 생성할 때 필요한 기본 옵션\r\n            center: new kakao.maps.LatLng(lat, lon), //지도의 중심좌표.\r\n            level: 4 //지도의 레벨(확대, 축소 정도)\r\n        };\r\n        const map = setTimeout(() => { //지도 생성 및 객체 리턴\r\n            new kakao.maps.Map(container, options);\r\n        }, 1000);\r\n\r\n        getDistance(lat, lon);\r\n    };\r\n\r\n    const getDistance = (lat, lon) => {\r\n        var polyline = new kakao.maps.Polyline({\r\n            path : [\r\n                new kakao.maps.LatLng(lat, lon),\r\n                new kakao.maps.LatLng(36.365243, 127.436007)\r\n            ]\r\n        });\r\n        console.log('polyline.getLength():', polyline.getLength());\r\n        return polyline.getLength();\r\n        // 내 위치에서 1km 반경에 있는 사람들의 글만 보이게\r\n    }\r\n\r\n    useEffect(() => {\r\n        getContainer();\r\n    }, []);\r\n\r\n    return(\r\n        <div className=\"popup\">\r\n            <input type=\"hidden\" name=\"otherLat\" id=\"otherLat\" />\r\n            <input type=\"hidden\" name=\"otherLon\" id=\"otherLon\" />\r\n            <div id=\"map\" style={{width:400, height:400, display:\"none\"}} />\r\n        </div>\r\n    )\r\n};\r\nexport default MapCom;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL : \"https://api.openweathermap.org/data/2.5\",\r\n});\r\n\r\nexport const weatherApi = (lat, lon) => api.get(`weather?lat=${lat}&lon=${lon}&appid=77371d8edaa624e1334298cf740c7bce&units=metric`);\r\n// export const userIpApi = () => `https://api.ipdata.co/?api-key=1ab80a79ea5f35a9d21e9b64415a3e1a08f30b0118f7f44223247e24`;\r\nexport const userIpApi = () => `https://api.ip.pe.kr/`;","import React, {useEffect, useState} from \"react\";\r\nimport {weatherApi} from \"./api\";\r\n\r\nconst Weather = ({coords}) => {\r\n    // 위도 경도 apiKey 보내기\r\n    const [api, getApi] = useState(false);\r\n    const [weatherObj, setWeatherObj] = useState(null);\r\n    const getWeather = async () => {\r\n        const {data} = await weatherApi(coords.lat, coords.lon);\r\n        setWeatherObj({\r\n            regieon : data.name,\r\n            temp : data.main.temp,\r\n            feels_like : data.main.feels_like,\r\n            weather : data.weather[0].main,\r\n            icon : data.weather[0].icon\r\n        });\r\n        getApi(true);\r\n    }\r\n    useEffect(() => {\r\n        getWeather();\r\n    }, []);\r\n    return (\r\n        <>\r\n        {api ? \r\n            (\r\n                <>\r\n                    <div className=\"weather_box\">\r\n                        <div className=\"weather_icon_box\">\r\n                            <img className=\"weather_icon\" src={`http://openweathermap.org/img/w/${weatherObj.icon}.png`} alt=\"날씨 아이콘\" />\r\n                        </div>\r\n                        <p className=\"weatherText\">현재 위치 {weatherObj.regieon}</p>\r\n                        <p className=\"weatherText\">기온 {weatherObj.temp}˚C</p>\r\n                        <p className=\"weatherText\">체감 {weatherObj.feels_like}˚C</p>\r\n                        {/* <p>날씨-{weatherObj.weather}</p> */}\r\n                    </div>\r\n                </>\r\n            ) \r\n            : \r\n            \"Can't get the weather\"\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBC42chVkeAv0OZaaosfJSxw6cSECqHerU\",\r\n    authDomain: \"mies-9b170.firebaseapp.com\",\r\n    projectId: \"mies-9b170\",\r\n    storageBucket: \"mies-9b170.appspot.com\",\r\n    messagingSenderId: \"539673967625\",\r\n    appId: \"1:539673967625:web:8ff5ca38849c7fab108cd8\",\r\n    measurementId: \"G-T25N9822NR\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();","import { dbService } from \"./fbase\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Ip from \"./Ip\";\r\nimport {userIpApi} from \"./api\";\r\n\r\nconst Create = ({coords, ip, onCreate}) => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    <Ip />\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let d = new Date();\r\n        let day = d.getDay(); // 시\r\n        let hours = d.getHours(); // 시\r\n        let minutes = d.getMinutes();  // 분\r\n        let ampm = \"\";\r\n        if(hours < 13) {\r\n            ampm = \"오전\"\r\n        } else {\r\n            ampm = \"오후\";\r\n            hours -= 12;\r\n        }\r\n        const contentObj = {\r\n            ip : ip,\r\n            content : content,\r\n            position : coords,\r\n            // town : \"\", 지도api로 동네를 알아낼 수 있나..? => 네이버 api는 가넝\r\n            timestamp : Date.now(),\r\n            time : ampm+\" \" + hours+\"시 \"+minutes+\"분\",\r\n            randomId : Math.floor(Math.random() * 101),\r\n            day : day,\r\n            dayKor : \"오늘\"\r\n        }\r\n        console.log('contentObj:', contentObj);\r\n\r\n        await dbService.collection(\"ㅁㅇㅇㅇ\").add(contentObj).then((docRef) => {console.log('docRef id:', docRef.id)});\r\n        setContent(\"\");\r\n\r\n        onCreate();\r\n    }\r\n    const onChange = async (event) => {\r\n        const {target:{value}} = event;\r\n        setContent(value);\r\n    }\r\n    return (\r\n        <div className=\"bgCover\">\r\n            <div className=\"boardBox\">\r\n                <form className=\"board\" onSubmit={onSubmit}>\r\n                    <FontAwesomeIcon className=\"boardCloseIcon\" icon={faTimes} onClick={e => onCreate()} />\r\n                    <h3 className=\"boardTitle\">난 오늘 이렇게 입었어!</h3>\r\n                    <input className=\"boardInput\" type=\"text\" placeholder=\"오늘 날씨에 맞는 옷차림을 알려주세요!\" value={content} required autoFocus onChange={onChange} />\r\n                    <input type=\"submit\" value=\"알려주기\" className=\"formBtn btnCreate\" />\r\n                </form>\r\n                {/* <button onClick={toggleEditing} className=\"formBtn cancelBtn\">취소</button> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\n\r\nconst Report = (report) => {\r\n    return (\r\n        \r\n        <div className=\"reportBox\">\r\n            <h4>신 고</h4>\r\n            <ul>\r\n                <li>1. 불쾌함, 욕설, 비하가 포함된 글</li>\r\n                <li>2. 광고</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Report;","import React, {useEffect, useState} from \"react\";\r\nimport { dbService, storageService } from \"./fbase\";\r\nimport Report from \"./Report\";\r\n\r\nconst Content = ({key, contentArr, isOwner}) => {\r\n    const [editting, setEditting] = useState(false);\r\n    const [newContent, setNewContent] = useState(contentArr.content);\r\n    const [report, setReport] = useState(false);\r\n    let d = new Date();\r\n    let day = d.getDay();\r\n    let dayKor = \"\";\r\n    if (contentArr.day !== day) {\r\n        dayKor = \"어제 \"\r\n    } else {\r\n        dayKor = \"오늘 \"\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {target:{value}} = event;\r\n        setNewContent(value);\r\n    }\r\n    const toggleEdit = () => setEditting((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).update({\r\n            content : newContent\r\n        });\r\n        setEditting(false);\r\n    }\r\n    const DeleteContent = async () => {\r\n        const confirm = window.confirm(\"정말 이 글을 삭제하시겠어요?\");\r\n        if(confirm) {\r\n            await dbService.doc(`ㅁㅇㅇㅇ/${contentArr.id}`).delete()\r\n        }\r\n    }\r\n    const toggleReport = () => {\r\n        setReport(true);\r\n    }\r\n    return (\r\n        <>\r\n            {editting ? (\r\n                    <>\r\n                    <form className=\"contentBox\" onSubmit={onSubmit}>\r\n                        <input className=\"\" value={newContent} onChange={onChange} name=\"newContent\" placeholder=\"내용을 수정해주세요\"></input>\r\n                        <input type=\"submit\" value=\"수정완료\" className=\"formBtn\" />\r\n                    </form>\r\n                    <button onClick={toggleEdit}>수정취소</button>\r\n                    </>\r\n                )\r\n            :\r\n                <div className=\"contentBox\">\r\n                    <p className=\"content__owner\">랜선친구 {contentArr.randomId}</p>\r\n                    <div className=\"formBtnBox\">\r\n                        {isOwner ? \r\n                        <>\r\n                            <button onClick={toggleEdit} className=\"formBtn\">수정</button>\r\n                            <button onClick={DeleteContent} className=\"formBtn\">삭제</button>\r\n                        </> \r\n                        : \r\n                            <button onClick={toggleReport} className=\"formBtn\">신고</button>\r\n                        }\r\n                    </div>\r\n                    <p className=\"content__text\">{contentArr.content}</p>\r\n                    <p className=\"content__time\">{dayKor}{contentArr.time}</p>\r\n                    {report ? <Report report={report} /> : \"\"}\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Content;\r\n","export default __webpack_public_path__ + \"static/media/mockup.62c58335.png\";","export default __webpack_public_path__ + \"static/media/meoib_logo.2f4e5b89.png\";","import React, {useState, useEffect} from \"react\"\r\nimport {dbService} from \"./fbase\";\r\nimport Create from \"./Create\";\r\nimport Content from \"./Content\";\r\nimport phoneImg from \"./assets/mockup.png\";\r\nimport logoImg from \"./assets/meoib_logo.png\";\r\nimport {userIpApi} from \"./api\";\r\n\r\nconst Board = ({coords}) => {\r\n    const [content, setContent] = useState([]);\r\n    const [ip, setIp] = useState(\"\");\r\n    const [creating, setCreating] = useState(false);\r\n    const [done, setDone] = useState(false);\r\n    let btnCreateValue = \"알려주기\";\r\n    const onClickCreate = (event) => {\r\n        setCreating(true);\r\n        btnCreateValue = \"\";\r\n    }\r\n    function json(url) {\r\n        return fetch(url).then(res => res.json());\r\n    }\r\n    json(`https://api.ipdata.co?api-key=1ab80a79ea5f35a9d21e9b64415a3e1a08f30b0118f7f44223247e24`).then(data => {\r\n        setIp(data.ip);\r\n    });\r\n    useEffect(() => {\r\n        dbService.collection(\"ㅁㅇㅇㅇ\").onSnapshot((snapshot) => {\r\n            const contentArr = snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setContent(contentArr);\r\n        })\r\n    }, []);\r\n    const doneCreate = (creating) => {\r\n        console.log('board creating:', creating);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <div className=\"phoneWrap\">\r\n                <div className=\"phone\" style={{backgroundImage:\"url(\" + phoneImg + \")\"}}></div>\r\n                <div className=\"inner__phone\"></div>\r\n            </div>\r\n            <div sytle={{marginTop : 30}} className=\"inner__container\">\r\n                <span onClick={onClickCreate} id=\"btnCreate\" style={{cursor:'pointer'}}>{btnCreateValue}</span>\r\n                <div className=\"contentWrap\">\r\n                    <div className=\"inner__contentWrap\">\r\n                        {content.map(contentArr => \r\n                            <Content key={contentArr.id} contentArr={contentArr} isOwner={contentArr.ip === ip} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n        {creating ? <Create coords={coords} ip={ip} onCreate={() => setCreating(false)} /> : \"\" }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport logoImg from \"./assets/meoib_logo.png\";\r\n\r\nconst Basictool = () => {\r\n\r\n    return (\r\n        <>\r\n            <a href=\"/\" className=\"logo\"><img alt=\"로고\" src={logoImg} id=\"logo\" /></a>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Basictool;","export default __webpack_public_path__ + \"static/media/dust_bg.cbbcb2e5.jpg\";","import React, {useEffect, useState} from \"react\";\nimport MapCom from \"./Map\";\nimport Weather from \"./Weather\";\nimport Board from \"./Board\";\nimport Basictool from \"./Basictool\";\nimport url from \"./assets/dust_bg.jpg\";\n\nfunction App() {\n  const [coords, setCoords] = useState(\"\");\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      if( position) {\n        setCoords({\n          lat : position.coords.latitude,\n          lon : position.coords.longitude\n        });\n      } else {\n        setCoords(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <>\n      <Basictool />\n      {init ?  <MapCom coords={coords} /> : \"Can't access geolocation\"}\n      {init ?  <Weather coords={coords} /> : \"Can't access geolocation\"}\n      {init ?  <Board coords={coords} /> : \"Can't access geolocation\"}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}